from aiogram import F, Router
from aiogram.types import Message, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.logger import error_logger
from config.config import MESSAGE_DELETE_DELAY, CHAT_ID
import asyncio

router = Router()


async def delete_message_after_delay(bot, chat_id, message_id):
    await asyncio.sleep(MESSAGE_DELETE_DELAY)
    try:
        await bot.delete_message(chat_id=chat_id, message_id=message_id)
    except Exception as e:
        error_logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@router.message(F.new_chat_members)
async def handle_new_member(message: Message, bot):
    if str(message.chat.id) != CHAT_ID:
        error_logger.warning(
            f"–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ —á—É–∂–æ–º —á–∞—Ç–µ: {message.chat.id}")
        return

    try:
        me = await bot.get_me()

        for member in message.new_chat_members:
            user_mention = (
                f"@{member.username}"
                if member.username
                else f"{member.first_name or '–£—á–∞—Å—Ç–Ω–∏–∫'}"
            )

            welcome_msg = (
                f"{user_mention}, –ü—Ä–∏–≤–µ—Ç! üíú\n"
                "–ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏. –≠—Ç–æ—Ç —á–∞—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n"
                "–ó–∞–≥–ª—è–Ω–∏ –≤ –≤–µ—Ç–∫—É "
                "<a href='https://t.me/c/1813228738/65079'>"
                "–í–∞–∂–Ω–æ–µ –∏ –ø—Ä–∞–≤–∏–ª–∞</a> ‚Äî —Ç–∞–º –≤—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n"
                "–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è! –†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ:\n"
                "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? (–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –∏–º—è)\n"
                "–ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ —Ç–µ–±—è –≤ —ç—Ç–æ—Ç —á–∞—Ç?\n"
                "–û —á—ë–º —Ç–µ–±–µ –≤–∞–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –∏–ª–∏ —á—Ç–æ —É–∑–Ω–∞—Ç—å?\n"
                "–ó–¥–µ—Å—å —Ç–µ–±—è –≤—ã—Å–ª—É—à–∞—é—Ç. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üåü\n\n"
                "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
            )

            keyboard = InlineKeyboardBuilder()
            keyboard.add(
                InlineKeyboardButton(
                    text="üìö –ü–æ–ª—É—á–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏",
                    url=f"https://t.me/{me.username}?start=guide",
                )
            )

            sent_message = await message.reply(
                text=welcome_msg, reply_markup=keyboard.as_markup(),
                parse_mode="HTML"
            )

            task = asyncio.create_task(
                delete_message_after_delay(
                    bot, sent_message.chat.id, sent_message.message_id
                )
            )
            task.add_done_callback(
                lambda t: t.exception() and error_logger.error(
                    t.exception()
                )
            )

            error_logger.info(
                f"–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: ID={member.id}, "
                f"Name={member.first_name}, "
                f"Username={member.username or '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}"
            )
    except Exception as e:
        error_logger.error(f"–û—à–∏–±–∫–∞ –≤ welcome: {e}", exc_info=True)
        from handlers.commands import error_handler

        await error_handler(e, bot)
